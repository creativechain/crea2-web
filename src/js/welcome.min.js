"use strict";(function(){var i;var e;var f={last:{value:null,date:0}};function c(){i=new Vue({el:"#welcome",data:{slide:0,username:"",email:"",error:{username:"",email:"",password:null,matchPassword:"",terms:"",policy:""},validUsername:false,validEmail:false,passwordMatch:false,checkedTerms:false,checkedPolicy:false,suggestedPassword:"",password:"",lang:lang},methods:{inputPassword:a,inputCheckPassword:g,checkEmail:d,changeSlide:function l(m){var n=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;console.log("Change to slide",m,n);if(!n||n.length==0){this.slide=m}},suggestPassword:function k(){this.suggestedPassword="P"+crea.formatter.createSuggestedPassword();this.password=this.suggestedPassword},checkUsername:h,sendConfirmationMail:j,createAccount:b,copyToClipboard:copyToClipboard}});creaEvents.emit("crea.dom.ready")}function h(){var n=i.$refs.inputusername;n.value=n.value.toLowerCase();var o=n.value;var m=new Date().getTime();f.last.value=o;f.last.date=m;f[o]=m;if(!crea.utils.validateAccountName(o)){var l=[o];var k=function k(r,p){var q=f[o];if(q>f.last.date||q>=f.last.date&&o===f.last.value){if(r){console.error(r);i.error.username=lang.ERROR.INVALID_USERNAME}else{if(p[0]!=null){i.error.username=lang.ERROR.USERNAME_EXISTS}else{i.error.username=null;i.username=o}}}};crea.api.lookupAccountNames(l,k)}else{i.error.username=lang.ERROR.INVALID_USERNAME}}function d(l){if(!e){e=null}var k=l.target.value;console.log("Checking mail",k,validateEmail(k));if(validateEmail(k)){refreshAccessToken(function(p){var o=apiOptions.apiUrl+"/validateAccount";var n=new HttpClient(o);m=function m(q){console.log("Validate",q,k);i.error.email=null;i.email=k};n.setHeaders({Authorization:"Bearer "+p}).when("fail",function(t,q,s){console.error("Request failed",t,q,s,k);if(t.responseText){var r=jsonify(t.responseText);if(r.error==="REGISTERED_EMAIL"){i.error.email=lang.ERROR.EMAIL_EXISTS}}else{i.error.email=lang.ERROR.UNKNOWN_ERROR}}).when("done",m).post({username:i.username,email:k})})}else{i.error.email=lang.ERROR.INVALID_EMAIL;i.email=""}}function g(m){var l=m.target.value;var k=i.password===l;if(k){i.error.matchPassword=null;i.passwordMatch=true}else{i.error.matchPassword=lang.ERROR.PASSWORDS_NOT_MATCH}i.passwordMatch=k}function a(l){var k=l.target.value;console.log("Input password",k);if(k&&!k.isEmpty()){i.password=l.target.value;i.error.password=null}else{i.error.password=lang.ERROR.INVALID_PASSWORD}}function j(k){if(!i.error.email){globalLoading.show=true;refreshAccessToken(function(n){var m=apiOptions.apiUrl+"/crearySignUp";var l=new HttpClient(m);l.setHeaders({Authorization:"Bearer "+n}).post({username:i.username,email:$("#reg-email").val()}).when("done",function(o){console.log("SignUp",o);i.slide=4;globalLoading.show=false;if(k){k()}})})}}function b(){if(!i.error.matchPassword&&i.checkedTerms&&i.checkedPolicy){globalLoading.show=true;var l=i.username;var k=i.password;createBlockchainAccount(l,k,function(n,m){globalLoading.show=false;if(!catchError(n)){console.log(m);i.slide=8}})}else{console.error("Account could not be created","Match pass:",i.passwordMatch,"Terms:",i.checkedTerms,"Policy:",i.checkedPolicy)}}creaEvents.on("crea.content.loaded",function(){console.log("Content loaded!");c();var k=getParameterByName("token");if(k){globalLoading.show=true;refreshAccessToken(function(n){var m=apiOptions.apiUrl+"/validate/"+k;var l=new HttpClient(m);l.setHeaders({Authorization:"Bearer "+n}).get().when("done",function(o){globalLoading.show=false;o=JSON.parse(o);console.log("SignUp",o);i.username=o.data.username;i.suggestPassword();i.slide=5}).when("fail",function(o,q,p){console.log(o,q,p);goTo("/"+o.status)})})}else{i.slide=1}})})();